          .pos 0
main:     irmovq stack, %rsp
          #initialize %rdi to the number of
          #fibonacci numbers to compute
          irmovq $20, %rdi
          #initialize %rsi to the address
          #of where to store the numbers
          irmovq fibolst, %rsi
          call fibo
          halt
# fibo 
# Computes fibonacci numbers
# param: %rdi - contains a count of the 
#        number of fibonacci numbers to 
#        compute
# param: %rsi - contains the starting 
#        address in memory of where to
#        store the numbers
#
fibo:     #put your code here  
          irmovq $8, %r13
          irmovq $2, %r14
          
          xorq %rcx, %rcx
          rmmovq %rcx, 0(%rsi)
          
          irmovq $1, %rcx
          rmmovq %rcx, 8(%rsi)
          subq %r14, %rdi
          
          irmovq $1, %r14
flStart:
          jle flEnd
          mrmovq 0(%rsi), %rcx
          mrmovq 8(%rsi), %rbx
          addq %rcx, %rbx
          rmmovq %rbx, 16(%rsi)
          addq %r13, %rsi
          subq %r14, %rdi
          jmp flStart
flEnd:    ret

          .align 8
fibolst:  .quad 0 
          .pos 0x400 
stack:    
